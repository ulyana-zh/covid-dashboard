/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}*{box-sizing:border-box;user-select:none;font-family:"Bebas Neue",cursive}html{color:#fff;font-size:10px}@media(max-width: 900px){main{height:205%}}.wrapper{margin:0 auto;max-width:1400px;padding:0 30px;display:flex;justify-content:space-between;align-items:center}.wrapper__header{padding-top:30px;padding-bottom:30px}@media(max-width: 700px){.wrapper__header{font-size:2.5rem}}.wrapper__main{display:grid;grid-template-columns:45% 55%;grid-template-rows:calc(100vh - 145px);grid-column-gap:10px;grid-row-gap:10px;justify-items:stretch;align-items:stretch;width:100%;height:calc(100vh - 145px);position:relative;padding:0}@media(max-width: 900px){.wrapper__main{grid-template-columns:100%;grid-template-rows:100% 150%}}.column{display:flex;flex-direction:column;align-items:center;justify-content:start;background-color:rgba(103,103,103,.306);box-shadow:-1px -4px 16px 0px rgba(9,13,35,.517);padding:10px}.footer__wrapper{height:50px;font-size:1.7rem;justify-content:flex-end;color:rgba(255,255,255,.878);font-weight:400}.footer__wrapper a{color:rgba(209,209,209,.503);text-decoration:none;margin:0 10px}.footer__wrapper a:hover{color:#fff}.footer__wrapper>span{margin:0 20px}.logo__rsschool{width:73px;height:27px;background-image:url(./assets/rs_school_js.svg);background-size:cover}.copyrigth{width:13px;height:13px;background-image:url(./assets/copyright.svg);background-size:cover;margin:0}.chart__wrapper{width:100%;height:50%;padding:20px;background-color:#081217;box-shadow:2px -5px 20px 0px rgba(20,20,20,.387);display:flex;align-items:center;justify-content:center;transition:all .8s ease-in-out;position:relative}@media(max-width: 1100px){.chart__wrapper{padding:0 10px}}@media(max-width: 900px){.chart__wrapper{padding:0 10px;flex-direction:column}}.chart{width:70%;height:70%;position:relative;display:flex;align-items:center;justify-content:center}@media(max-width: 700px){.chart{width:90%;height:90%}}.chart__buttons{display:flex;flex-direction:column;font-size:1.5rem;margin:10px}@media(max-width: 1100px){.chart__buttons{margin-left:10px;justify-content:space-between}}@media(max-width: 900px){.chart__buttons{flex-direction:row}}.chart__buttons p{margin:10px}.chart__buttons p input,.chart__buttons p label{cursor:pointer}.map__wrapper{height:50%;width:100%;margin-bottom:10px;position:relative}.map{height:100%;width:100%}#map{width:100%;height:100%}.map-legend{position:absolute;width:20px;height:20px;top:5px;left:50px}.disabled{display:none}.map-legend-button{width:100%;height:100%}.map-legend-button img{width:100%;height:auto}.map-legend-button img:hover{cursor:pointer}.map-legend-button img:active{transform:scale(0.8)}.map-legend-content{position:absolute;top:-5px;left:40px;background-color:#1a2637;width:220px;text-align:center;transition:.5s}.map-legend-content .legend-title{display:inline}.map-legend-content div{width:100%;margin-left:5px;display:flex;justify-content:flex-start;align-items:center}.map-legend-content div div{display:flex;justify-content:center;align-items:center;margin-right:10px;width:26px;height:26px}.map-legend-content div div img{opacity:.5}.map-legend-content div span{font-size:1.5rem}.legend-title{margin:0 auto;font-size:2.4rem}.close-button{position:absolute;top:5px;left:175px;width:30px;height:30px}.close-button img{width:30px;height:auto}.close-button img:hover{cursor:pointer}.close-button img:active{transform:scale(0.9)}.select-map{font-family:"Bebas Neue",cursive;position:absolute;top:10px;right:20px;outline:none;z-index:1;padding:4px 15px;background-color:#f3f3f3;box-shadow:inset 0px -1px 1px rgba(255,255,255,.28),inset 0px 1px 2px rgba(0,0,0,.25);color:#656565;font-size:1.5rem;border:none;border-radius:15px;cursor:pointer}.leaflet-control-container{position:relative;z-index:0}body{background:linear-gradient(-45deg, #3c4651, #2a3038, #1c3340, #344b73);height:100vh;color:#fff;font-family:"Work Sans",sans-serif;font-size:3rem;background-size:400% 400%;animation:gradient 15s ease infinite}@keyframes gradient{0%{background-position:0% 50%}50%{background-position:100% 50%}100%{background-position:0% 50%}}.wrapper__full-screen{position:relative}.full-screen{width:100%;height:100%;max-width:1400px;padding:0 30px;display:none;position:absolute;top:0;left:0}.resize{height:100% !important;width:100%;box-shadow:-1px -4px 16px 0px rgba(9,13,35,.517);border:10px solid rgba(211,211,211,.183)}.visible{display:block;z-index:1}.none-visible{visibility:hidden}.icon-resize{background-image:url(./assets/full-screen.png);background-size:cover;width:20px;height:20px;position:absolute;top:-5px;right:-5px;z-index:1;cursor:pointer}@media(max-width: 900px){.icon-resize{display:none}}.icon-resize:hover{transition:all .3;transform:scale(1.1)}.icon-close{background-image:url(./assets/close.png)}label:hover{transition:all .3s;color:#e6e6e6e5}.search{position:absolute;font-size:3rem;top:150px}#search{z-index:5}.keyboard{max-width:600px;width:110%;padding:10px;background-color:#909090;position:absolute;left:calc(50% - 300px);top:calc(75% - 100px);z-index:2;cursor:move;border-radius:10px}@media(max-width: 900px){.keyboard{left:50px;top:100px}}@media(max-width: 750px){.keyboard{width:100%;left:0px;top:100px}}.keyboard-off{display:none}.keyboard__row-first,.keyboard__row-second,.keyboard__row-third,.keyboard__row-fourth,.keyboard__row-fifth{display:flex}.key{display:flex;flex-direction:column;font-size:2rem;text-align:center;width:6.5%;height:35px;cursor:pointer;margin:2px;background-color:#ffffffe3;border-radius:5px;user-select:none;color:rgba(0,0,0,.775)}.key:hover{background-color:#747171}.key:active{box-shadow:inset 0 0 5px rgba(0,0,0,.5)}.key span{font-size:1.2rem}.side-key,.side-key-rus{text-align:right;padding-right:5px;font-size:1.5rem;opacity:.4}.main-key,.main-key-rus{text-align:center;font-size:2.5rem}.key.backspace{width:9%;display:flex;justify-content:center;background:url(./assets/delete.svg) no-repeat 50% 50%;background-size:20px;background-color:#ffffffe3}.key.backspace:hover{background-color:#747171}.key.up{background:url(./assets/arrow-up.svg) no-repeat 50% 50%}.key.down{background:url(./assets/arrow-down.svg) no-repeat 50% 50%}.key.left{background:url(./assets/arrow-left.svg) no-repeat 50% 50%}.key.right{background:url(./assets/arrow-right.svg) no-repeat 50% 50%}.key.up,.key.down,.key.left,.key.right{max-width:60px;background-size:15px;background-color:#ffffffe3}.key.up:hover,.key.down:hover,.key.left:hover,.key.right:hover{background-color:#747171}.key.backspace span,.key.up span,.key.down span,.key.left span,.key.right span,.key.space span{font-size:0}.key.tab,.key.delete{width:11%;display:flex;justify-content:center}.key.tab span{padding-right:30px}.key.tab{background:url(./assets/tab.svg) no-repeat 85% 50%;background-size:10px;background-color:#ffffffe3}.key.tab:hover{background-color:#747171}.key.capslock{width:15%;display:flex;justify-content:center}.key.enter{width:15.5%;display:flex;justify-content:center}.key.enter span{padding-right:30px}.key.enter{background:url(./assets/enter.svg) no-repeat 80% 50%;background-size:15px;background-color:#ffffffe3}.key.enter:hover{background-color:#747171}.key.shift{width:15.25%;display:flex;justify-content:center}.key.shift{background:url(./assets/up.svg) no-repeat 15% 50%;background-size:15px;background-color:#ffffffe3}.key.shift:hover{background-color:#747171}.key.ctrl{width:7.5%;display:flex;justify-content:center}.key.space{width:46%}.key.alt{display:flex;justify-content:center}.active{box-shadow:inset 0 0 5px rgba(0,0,0,.5);filter:contrast(1.3)}.key.win span:nth-child(1){font-size:0}.key.win span:nth-child(2){text-align:right;padding-right:5px;font-size:1.2rem}.language{display:inline-block;margin-top:3px;height:100%}.keyboard-icon{position:absolute;width:30px;height:30px;background:url(./assets/keyboard.svg) 50% 50% no-repeat;background-size:contain;right:30px}.keyboard-icon:hover{cursor:pointer}.keyboard-icon:active{transform:scale(0.9)}.close-keyboard{width:20px;height:20px;position:absolute;top:-9px;right:-3px}.close-keyboard img{width:20px;height:auto}.close-keyboard img:hover{cursor:pointer}.close-keyboard img:active{transform:scale(0.9)}.print-icon{width:25px;height:25px;position:absolute;left:calc(100% - 50px);top:10px}.print-icon img{width:25px;height:auto}.print-icon img:hover{cursor:pointer}.print-icon img:active{transform:scale(0.9)}.print-data{position:absolute;width:620px;height:877px;background-color:crimson;display:none}.title-print{display:flex;justify-content:center;align-items:center;margin:20px}.title-print img{width:40px;height:auto;margin-right:10px}.title-print span{font-family:"Roboto",sans-serif}.update-print{font-family:"Roboto",sans-serif}.table-print{margin-top:20px}.table-print-title{width:450px;text-align:center;margin:20px auto 10px;font-family:"Roboto",sans-serif}.table{width:800px;margin:0 auto;border:2px solid #000;border-collapse:collapse}.table th{border:2px solid #000;font-family:"Roboto",sans-serif;height:50px}.table td{border:2px solid #000;font-family:"Roboto",sans-serif;min-width:150px;height:50px}.table td:not(:first-child){text-align:center}.second-table{width:600px;margin:0 auto;border:2px solid #000;border-collapse:collapse}.second-table th{border:2px solid #000;font-family:"Roboto",sans-serif;height:50px}.second-table td{border:2px solid #000;font-family:"Roboto",sans-serif;min-width:150px;height:50px;text-align:center}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/